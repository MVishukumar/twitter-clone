logging.level.com.springframeworkvishu=debug

# ===============================
# = Webpage constants
# ===============================
ALL_TWEETS_PAGE = Home
TWEET = Tweet
EDIT_TWEET = Edit Tweet

#Encryption secret password
jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD}

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/twitter_clone
spring.datasource.username=appuser
spring.datasource.password=apppassword
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#Encrypted username and password
#spring.datasource.username=ENC(FaubiAGzvszf0TW/4mmlCg==)
#spring.datasource.password=ENC(S8t4rSmw+OsM+qngLywNYb8BHxrxKPst)


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=create
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect



# ===============================
# = Spring Session
# ===============================
spring.session.store-type=JDBC
spring.session.jdbc.initialize-schema=always
spring.session.timeout.seconds=5

